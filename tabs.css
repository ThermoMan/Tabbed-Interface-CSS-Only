/**
  * The inspiration for this CSS came from two projects
  *
  * The early days of: https://github.com/ThermoMan/3M-50-Thermostat-Tracking
  *  and
  * http://www.w3.org/Style/Examples/007/target
  *
  * The latter had the tabs fully implemented using only CSS.
  *
  * Code by
  ______ __                                   __  ___
 /_  __// /_   ___   _____ ____ ___   ____   /  |/  /____ _ ____
  / /  / __ \ / _ \ / ___// __ `__ \ / __ \ / /|_/ // __ `// __ \
 / /  / / / //  __// /   / / / / / // /_/ // /  / // /_/ // / / /
/_/  /_/ /_/ \___//_/   /_/ /_/ /_/ \____//_/  /_/ \__,_//_/ /_/
  */


/* All color references have been moved to a separate CSS file so that appearance and function are isolated from each other */

/**
	* Establish a containing block for tabbed area controls 
	*/
div.all_tabs
{
	position: relative;										/* Wherever it may fall on the page */
	line-height: 1em;											/* Easier to calculate with */
	z-index: 0;														/* So that we can put other things behind */
}

/**
  * We want all the tab buttons on one line, so first level nesting is the individual tab
  *  title - which is a container for all the content of that tab.
  */
div.all_tabs > div.tab
{
  display: inline;
}

/* Visually connect tab and tab body (border around tabs and between tabs and body) */
div.all_tabs > div.tab > a
{
	padding: 0.0em 0.3em 0.2em 0.3em;			/* Some breathing space - space around tab title text - leave gap between button and content (see below) */
	border: 0.15em outset;								/* Gives the tab a 3Dish effect */
	/* border-bottom does not matter because it is superceded later to show which tab is selected */
	/* border-bottom: 0.1em solid; */
}

/** 
	*  Will need to make all icons consistent with each other -OR-
	* individually adjust vertical and horizontal spacing a few pixels.
	*
	*/
div.all_tabs > div.tab > a > img.tab-icon
{
	position: relative; 
	top: -3px;
	height: 24px;													/* Make the icon fit regardless of source image size */
	width: 24px;            							/* Make the icon fit regardless of source image size */
	vertical-align: top;
}

/**
	*  These next three classes distinguish between the 4 states a tab can be in.
	*
	* Selected                - this one tab has the emphasis color.
	* Inactive (Not selected) - all of the other tabs are other color.
	* Mouse over              - this one tab is hilighted in another.
	* Disabled                - This tab is unclickable (has no link).  This is not yet implemented.
	*
	* The CSS does not change position or anything else, just the appearance of the tab.
	*/

/* Inactive tabs */
div.all_tabs > div.tab:not(:target) > a
{
	border-bottom: none;									/* Make the bottom border disappear */
	border-radius: 8px 8px 0px 0px;				/* Tab border is rounded */
	text-decoration:  none;								/* Remove underline from href */
}

/* Mouse over tab is hilighted */
div.all_tabs > div.tab:not(:target) > a:hover
{
	border-bottom: none;									/* Make the bottom border disappear */
	border-radius: 8px 8px 0px 0px;				/* Tab border is rounded */
}

/* Selected tab */
div.all_tabs > div.tab:target > a,			/* Apply to the targeted item or... */
:target #default2 > a
{																				/* ... to the default item */
	border-bottom: 0.1em solid;						/* Visually connect tab and tab body - remove gap between button and content (see above) */
	border-radius: 8px 8px 0px 0px;       /* Tab border is rounded */
	text-decoration:  none;               /* Remove underline from href */
}

/**
	* Container for toolbar and contents - nothing else should be in here - this is the thing who's z-order should shift
	*/
div.all_tabs > div.tab > div.container
{
	top: 1.3em;														/* The top needs some calculation... */
	border: solid 3px;										/* This is the color of the main border around the tab content */
	width: 840px;													/* Set the horizontal width of the tab content area */
	height: 460px;												/* This sets the vertical height of the tab content area - regardless of the content vertical height */
	z-index: -2;													/* Behind, because the borders overlap */
	overflow: hidden;
}

/** 
	* Set up a toolbar for contents of the tab - this is technically inside the section described immediately above 
	*/
div.all_tabs > div.tab > div.container > div.tab-toolbar
{
	position: relative;
	width: inherit;  
	height: 30px;													/* Tall enough that wierd elements don't make it grow */
	display: table-cell;
	vertical-align: middle;
	font-family: 'Arial Black', Gadget, sans-serif;	/* A common font */
	font-size: 0.6em;
	overflow: hidden;
}

/* This CSS styles the CONTENTS of the ACTIVE tab */
div.all_tabs > div.tab > div.container > div.content
{
	width: inherit;
	height: 427px;												/* This requires computation content = container - toolbar - border */
	overflow: auto;												/* Scroll bar if needed */
}

/* All these DIVs overlap */
div.all_tabs > div.tab:not(:target) > div.container
{ /* Protect CSS1 & CSS2 browsers (I will remove this code in the next revision if it really is only for those old browsers) */
	position: absolute;
}

/* Raise select tab content above the content of the other tabs */
div.all_tabs > div.tab:target > div.container, :target #about > div.container
{
	position: absolute;										/* All these DIVs should overlap completely with each other */
	z-index: -1;
}

div.all_tabs > div.tab :target
{
	outline: none;
}

/**
	* This is the background color that informs users that the input field is remembered via cookie.
	* Clear the style to remove the chroma code.
	*/
.remembered_input
{
	/* background: #BBFFBB; */
}